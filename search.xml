<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title><![CDATA[sevlet概念]]></title>
    <url>%2F2019%2F06%2F09%2FServlet%26Jsp%2F</url>
    <content type="text"><![CDATA[什么是servlet? 是sun公司制定的一种用来拓展web服务器功能 的 组件规范。 拓展web服务器功能的含义 web服务器只能处理静态的资源请求（即需要事先将html文件准备好),可以使用servlet来扩展（即web服务器可以通过servlet来处理动态资源的请求，比如访问数据库）。 组件规范的含义 什么是组件？ 符合一定规范，实现部分功能的，并且需要部署到响应的容器中才能运行的软件模块（所以说servlet是一个组件，需要部署到相应的servlet容器里面才能运行） 什么是容器？ 符合一定规范，提供组件的运行环境的程序（tomcat就是一个容器，提供了servlet的运行环境。基本上一个servlet容器就是一个微型服务器） 如何写一个servlet呢？ 写一个Java类 ，实现一个接口servlet 或者继承httpServlet抽象类(通常采用第一种) 编译 打包（变成组件） 创建一个具有如下结构的文件夹： appname(应用名) dangdang WEB-INF classes(放编译后的class文件) lib（可选的,放jar文件） web.xml(部署描述文件) 部署 将第三步创建好的整个文件夹拷贝到servlet容器相应的位置注：可以使用Jar命令将第三步创建好的文件夹压缩成一个“.war”为后缀的文件，然后拷贝 启动容器访问servlet http://ip:port/appname/url-pattern*注意：url-pattern在web.xml文件中定义* servlet是如何运行的？当用户向浏览器地址栏输入http://ip:port/helloweb/sayHello?name=zs 浏览器使用ip：port（端口号）连接服务器 浏览器将请求数据按照http协议打成一个数据包（请求数据包）发送给服务器请求数据包的内容包含了请求资源路径(/helloweb/sayHello?name=zs)，另外，在请求数据包当中，还会包含浏览器自动生成的一些信息。 服务器创建两个对象：请求对象（Request）和响应对象（Response）服务器解析请求数据包，将解析之后的数据存放到请求对象里面，方便servlet读取请求数据(因为servlet不用解析请求数据包，如果要解析，需要理解http协议)。请求对象是HttpServletRequest接口的一个实现。响应对象是HttpServletResponse接口的一个实现，响应对象由于存放servlet处理的结果。 依据请求资源路径找到相应的servlet配置，通过反射创建servlet实例(容器只会创建一个实例)。然后调用其service()方法。在调用service()方法时，会将事先创建好的请求对象(request)和响应对象(response)作为参 数进行传递。在servlet内部，可以通过request获得请求数据，或者通过response设置响 应数据。 服务器从response中获取数据，按照http协议打成一个数据包(响应数据包),发送给浏览器。 浏览器会解析响应数据包，取出相应的数据，生成相应的界面。 常见的问题 状态码(表示的是服务器处理请求的一种状态) 404 表示的就是服务器依据请求地址找不到相应的资源 产生的原因： 1.没有部署该应用 2.在 web.xml文件中定义的&lt;servlet-name&gt;不一致 3.请求地址写错了 检查 http://ip:port/appname/url-pattern 500 含义：系统出错 产生原因：通常是程序在运行中出错 1.java类书写问题 2.&lt;servlet-class&gt;写错了 3.代码写的不够严谨，比如对请求参数没有做检查就做一些转化 什么是请求参数？ 在浏览器上输入：http://localhost:8080/webday01/hello?qty=100 qty:请求参数名 100:请求参数值 405 含义：找不到处理方法 原因：service方法定义错误 ###http协议 什么是http协议？是由w3c制定的一种网络应用层协议，规定了浏览器与web服务器之间如何通信以及相应的数据包的格式。 如何通信的 1.建立连接 2.发送请求 3.发送响应 4.关闭连接 特点：一次请求，一次连接 *这样做的优点是：服务器可以利用有限的连接为尽可能多的请求服务 - 数据包的结构 请求数据包 请求行（请求方式 请求资源路径 协议类型和版本） 消息头（是一些键值对 使用“：”隔开），表示特定的含义 实体内容 只有当请求方式为post时，实体内容才会有数据 响应数据包 状态行 （协议类型和版本 状态码 状态描述） 200 正确 500 系统出错 404 找不到对应的资源 消息头 （键值对 比如：content-type 告诉浏览器，服务器返回的数据类型） 实体内容 程序的处理结果，浏览器会解析其中的数据，生成相应的页面 - 两种请求方式 get: 1.哪些情况下会使用到get请求 直接输入某个地址 点击链接 表单默认提交数据的方式 2.特点：将请求参数放在请求资源路径的后面，只能提交少量的数据，会泄露信息不安全 比如路由器就会记录了包含了请求参数的请求地址 post: 1.哪些情况下会使用到post请求？ 设置表单的属性 2.特点： 1.会将请求参数添加到尸体内容里，可以提交大量的数据 2.不会讲请求参数显示在浏览器地址栏，相对安全 注意：不会将请求参数加密 编码问题 服务器端返回的数据的编码问题 response.setContentType(&quot;text/html;charset=utf-8&quot;); out.println()方法在默认情况下会采用”iso..”来编码 表单含有中文参数值 表单提交为什么有乱码？ 表单提交时，浏览器会对表单中的中文参数值进行编码 会按照打开该表单所在的页面时的字符集来编码 而服务器端默认情况下会使用“iso-8859-1”来解码 如何解决？ 1.在html文件里面加上 &lt;meta http-equiv=&quot;content-type&quot; content=&quot;text/html;charset=utf-8&quot; &gt;&lt;meta charset=&quot;utf-8&quot;&gt; 服务端使用对应的字符集来解码request.setCharacterEncoding(“utf-8”); //必须保证表单是post请求 使用jdbc访问数据库 需要将jbdc驱动（jar文件）拷贝到web-inf\lib下 使用jdbc提供的一套api来访问数据库 重定向的使用 含义：服务器通知浏览器向一个新的地址发送请求*注： 服务器向浏览器发送一个302状态码和一个location消息头 （该消息头包含了一个地址，称之为重定向地址），浏览器 收到之后立即向地址发送请求。* 如何重定向？ response.sedRedirect(String url);注：url就是重定向地址。重定向之前，容器会清空response对象中保存的数据（out.println()//表示的就是将数据加载到response对象中）2.当重定向代码放置在service方法中 ，服务器会先执行完整个service方法（包括重定向代码后面的代码）然后才会向浏览器发送状态码和 location消息头 重定向的特点： 冲顶向的url是任意的 重定向之后，浏览器地址栏的地址会变 servlet组成及其mvc的覆盖 关于mysql的中文支持问题 mysql的某些驱动，默认会使用iso08859来编码，java用的是unicode来编码的，对于有中文就会出现问题解决办法看下图 servlet的生命周期 什么是servlet的周期？ 容器如何去创建servlet对象，如何对其进行初始化处理，如何 调用其方法来处理请求，以及如何销毁该对象的整个过程。 它分几个阶段？ 实例化 什么是实例化？ 容器通过一个线程调用servlet的构造器，创建相应的对象 什么时候实例化？ 情况一.容器收到请求之后 情况二.容器启动后立即创建 *只需要在web.xml文件中加上一个&lt;load-on-startup&gt;1&lt;/load-on-startup&gt;（这个标签里面的参数值要求是一个大于等于0的整数这个整数越小，优先级就越高。（即先创建）* 注：容器只会创建一个实例 初始化 什么是初始化？ 容器调用servlet对象的init方法，该方法只会执行一次，作用：给servlet分配资源（分配一个ServletConfig对象） 关于ServletConfig对象的问题 它是当自定义Java类继承了httpservlet，实现过程：将容器传递过来的servletconfig对象保存下来并且提供了一个获取该对象的方法（getServletConfig()）servletconfig对象的作用 我们可以通过它来访问初始化参数 如何实现自己的初始化处理逻辑？ 只需要覆盖 genericserlevt提供的init()方法 初始化参数 1.配置； &lt;init-param&gt; &lt;param-name&gt;company&lt;/param-name&gt; &lt;param-value&gt;zacwong&lt;/param-value&gt; &lt;/init-param&gt; 2.读取： String ServletConfig.getInitParameter(string s )方法 就绪 什么是就绪？ 容器调用servlet的service方法来处理请求 HttpServlet的service方法是如何实现的？ 依据请求类型（get/post）调用相应的doXXX方法（doGet()/doPost()）注：既然这样，我们在写servlet的时候，继承httpservlet然后可以直接覆盖service方法 或者覆盖doGet()和doPost()方法详细见下图 销毁 什么是销毁？ 容器在删除servlet对象之前，会先调用该对象的destroy方法。 该方法只会执行一次。 相关的几个类和接口 Servlet接口 init() service() destroy() GenericServlet抽象类 实现了servlet接口 实现了Servlet接口中的部分方法（init，destroy） HttpServlet抽象类 继承了GenericServlet抽象类,实现了service方法 servlet测试的相关图片 servlet类的示例 servlet类所对应的web.xml配置 服务器对请求的处理 容器如何处理请求资源路径 比如，在浏览器输入HTTP://IP:PORT/WEB01-02/ABC.HTML 容器依据应用名（“/web01-2”）找到应用所在的文件夹 容器默认认为调用的是一个servlet，他会去web.xml中查找有 没有一个和&quot;/abc.html&quot;匹配的servlet 关于容器匹配的问题 精确匹配 /abc.html 通配匹配 /* 也就是 容器会默认处理浏览器发来的任何资源请求路径 后缀匹配 -使用“.”开头，后接多个字符，比如 .java也就是 容器会处理浏览器发来资源请求路径中含有.java的路径 合并多个servlet JSP什么是jsp? 是sun公司制定的一种服务器端动态页面技术规范。JSP其实是一个“.jsp“为后缀的文件，该文件的内容主要是 HTML和少量的java代码，容器会将JSP文件自动转化成一个servlet 然后执行。 怎么创建一个jsp文件？ 创建一个以’.jsp’为后缀的文件 在文件里面添加如下内容： html(css,js):直接写 Java代码： Java代码片段 格式：&lt;% java语句;%&gt; jsp表达式 格式： &lt;%= java表达式 %&gt; jsp声明 &lt;%! 声明一个变量或者一个方法%&gt; （声明的变量或者方法是在jsp转化成servlet类中） 隐藏对象 什么是隐藏对象？ 在jsp文件里面，可以直接使用的对象，如out,request,response,session,application,exception(注意：session对象的使用详见下图) page对象（jsp示例本身，就是servlet对象，用的很少） pageContext对象(页面上下文) 容器会为每一个jsp实例创建一个唯一的符合PageContext接口要求的对象（它跟ServletContext一样具有唯一性和持久性） 作用： 1.绑定数据 setAttribute getAttribute removeAtrribute 注：绑定到pageContext上的数据只有对应的jsp实例能访问 详细看WebText09-2 a5.jsp a6.jsp 2.获得其他的隐藏对象*我们可以通过一个java类获取jsp当中的其他隐藏对象* config 就是servletConfig 通过config读取jsp实例初始化参数配置web.xml 详细看 p24 00:30:06 WebText09-2 a7.jsp &lt;servlet&gt; &lt;servlet-name&gt;jsp&lt;/servlet-name&gt; &lt;jsp-file&gt;/a7.jsp&lt;/jsp-file&gt; //注意这里的格式 &lt;init-param&gt; &lt;param-name&gt;company&lt;/param-name&gt; &lt;param-value&gt;zac&lt;/param-value&gt; &lt;/init-param&gt; &lt;/servlet&gt; &lt;servlet-mapping&gt; &lt;servlet-name&gt;jsp&lt;/servlet-name&gt; &lt;url-pattern&gt;/abc.html&lt;/url-pattern&gt; &lt;/servlet-mapping&gt; 这里当我们在访问地址下访问abc.html的时候 服务器就会返回 a7.jsp文件 #####指令 什么是指令？ 通知容器，在将Jsp文件转化成servlet类时做出一些额外的处理，比如导包 指令的语法 &lt;%@指令名称 属性=属性值%&gt; 常见的一些指令 page指令 import属性：导包用的 比如&lt;%@page import=&quot;java.util.*&quot;&gt; 中文处理 contentType=&quot;text/html; charset=utf-8&quot; pageEncoding=&quot;utf-8&quot; include指令告诉容器，在jsp文件转换成servlet类时，将file属性指定的文件的内容插入到该指令所在的位置》比如：&lt;%@include file=&quot;header.jsp&quot;%&gt; taglib指令 用来引入jsp标签 - ##### jsp是如何执行的？ 1. 容器会将jsp文件转换成一个servlet类 HTML（css,js） ----&gt; service方法使用out.write()输出 java代码片段 --&gt; service方法里，照搬 jsp表达式---&gt; serivce方法里，使用 out.print(java表达式)输出 jsp声明 --&gt;给servlet增加新的属性或者方法 2. 容器调用servlet. 处理servlet运行时产生的异常 编程式处理 捕获异常 转发信息到错误页面 图示如下 声明式处理（即交给容器处理）系统异常就用它，但是它不灵活 捕获异常 配置异常处理页面 &lt;error-page&gt; &lt;exception-type&gt;javax.servlet.ServletException&lt;/exception-type&gt; &lt; location &gt;/error2.jsp&lt; /location &gt; &lt;/error-page&gt; 写好error2.jsp 图示如下 声明式异常常常用来处理系统异常（异常发生之后不能恢复，比如数据库停止），发生这类一场后，提醒用户稍后重试即可编程式异常（转发的方式）更灵活，可以处理应用异常(比如，用户输入错误的密码)； 转发 定义：一个组件（servlet/jsp）将未完成的处理交给另外一个web组件继续做。比如，一个servlet将处理结果(调用了dao)转发给一个jsp来实现(展示) 如何转发？ 绑定数据到request上 request.setAttribute(String name,Object obj)注：依据绑定名获得绑定值 Object request.getAttribute(String name); 获得转发器 RequestDispatcher rd =request.getReqiestDispatcher(String url); 转发 rd.forward(request,response); 转发的特点 转发之后，浏览器地址访问servlet的地址栏的地址不变 转发地址有限制(必须是在同一个应用) 转发的注意事项 转发之前，不能执行out.close 和out.flush方法 转发之前，会将response当中缓存的数据清空 如果转发和重定向代码后头都有代码那么 重定向：会继续先执行后面的代码 转发：会先执行转发的页面的代码，再回来执行后面的代码 无论是 request.getRequestDispatcher(path).forward(request, response)还是response.sendRedirect,程序都会在执行完该句的情况下继续向下执行,因此在必要的时候应该使用return终止该方法. 区分重定向和转发 转发所涉及的各个web组件可以共享同一个request对象，重定向不可以注： 容器收到请求后，会创建request对象和response对象，当响应发送完毕，容器会删除响应（response）和请求(request)对象.所以说重定向是两次请求 ，转发的话是一次请求 重定向之后，浏览器的地址栏会变，转发不会变。 重定向的地址是任意的，转发的地址必须是同一个应用下 转发是一件事没完成，重定向是一件事情已经做完 关于路径的相关问题 涉及到的内容有：链接地址，表单提交地址，重定向，转发 如果填写下列路径 &gt; &lt; a href=&quot;&quot;&gt;&lt;/a &gt; &gt; &lt; form action=&quot;&quot;&gt; &gt; response.sendRedirect(&quot;&quot;) &gt; request.getRequestDispatcher(&quot;&quot;) 绝对路径 以”/“开头的路径 相对路径 不以”/“开头的路径 如何写绝对路径？ 链接地址，表单提交地址，重定向，从应用名开始写 转发从应用名之后开始写]]></content>
      <categories>
        <category>学习</category>
      </categories>
      <tags>
        <tag>导航</tag>
        <tag>分享</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[markdown的使用]]></title>
    <url>%2F2019%2F06%2F02%2Fmarkdown%E8%AF%AD%E6%B3%95%2F</url>
    <content type="text"><![CDATA[关于空格的问题 无论是写入多少个连续的space 或者 Tab 或者 Enter，一般渲染之后都是只会显示一个空格. 如果想要进行硬换行的话需要在上一行写上两个 space 和 Enter就像这样 如果两行文字之间存在一个或者多个空行那么这些空行渲染后只会显示一行空行，如果在书写的时候 两行空开了那么渲染后自动空一行 就像这样 关于段落问题 在所有段落前后空行就是了 例如： 这是段落一 这是段落二 这是段落三 在段落当中我们还可以使用空行 例如： 这是段落一 你懂的 这是段落二 你也懂的 这是段落三 你更懂的 关于分割线不用多说 关于列表不用多说 列表前面要加上# 然后再换行加上*或者 1. 如果有列表的嵌套使用的话在子列表那块要加上Tab键进行缩进 做一件事情 做另外一件事情 第一步吉萨做啥？ 第二步先干吗 做第三件事请 关于文字加粗倾斜的问题格式： **加粗内容**，*倾斜内容*，***倾斜加粗内容*** 关于转义字符 在正常段落中要原样输出以上字符`*_{}#+-.!通常都要在它们前面加上\ 你是谁？你子啊的撒旦拉萨解放路口设计 撒大苏打撒旦撒范德萨讽德诵功返回* 引用块的使用 引用的效果就如本文档中代码和样式示例。在每行行首加‘&gt;’ （同样也可以通过双空格+回车实现多行效果） 这是一则引用每行行尾没有双空格所以会显示为一行引 这也是一则引用但是它是通过双空格加回车实现 的 下面是二级引用的例子效果如下 加入两个&gt;&gt;符号 就成了(三级引用) 回到一级引用 进入二级引用 进入三级引用 2.如果在&gt;符号后头加入过多的空格那么引用当中就会出现代码块 &gt; public stataic void main(String[]args){ &gt; int a = 1; &gt; int b = 4; &gt; System.out.println(a*b); &gt; } 行内代码和代码段落 行内代码(直接使用``) 这里插入一段代码public void static void main(String[]args){...}另外一段代码String s = &#39;菜菜才&#39;; 代码块 直接往上写 但是教程上是用``` ```括起来的 public class TextCookieAsSession extends HttpServlet { public void service(HttpServletRequest request, HttpServletResponse response) throws ServletException, IOException { request.setCharacterEncoding(&quot;utf-8&quot;); response.setContentType(&quot;text/html;charset=utf-8&quot;); PrintWriter out = response.getWriter(); Cookie c = new Cookie(&quot;count&quot;, &quot;1&quot;); c.setMaxAge(60*24); response.addCookie(c); Cookie[] c1 = request.getCookies(); for (Cookie c2 : c1) { if (c2.getName().equals(&quot;count&quot;)) { out.println(&quot;你访问的次数为&quot;+c2.getValue()); Cookie c3 = new Cookie(&quot;count&quot;, &quot;&quot;+(Integer.parseInt(c2.getValue())+1)); response.addCookie(c3); } } } } 链接和图片上百度搜索呀 行内式链接：方括号中是链接问题，方括号后跟紧的的袁扩好内是地址（可以是网络地址或者主机的相对地址），网址后空一格双引号引起来的是title文字。title文字可以不写详见上头百度 表格 表格语法使用 | ：如果 |与其他非空白符号之间最少空一个空格。 表格由行列组成。 不同行之间用Enter分隔（不需要双空格）。 同行之间分隔不同列使用 | 。行首和行尾也可以使用 | 。 同一张表格，各行的列数（单元格数）应该相同。 一个表格的源代码第一行是表头。但填写规则和普通单元格一样。 一个表格源代码第二行不会渲染成一行单元格。它被用来分隔表头和普通单元格。这一行每一个单元格都填写大于等于三个-。 在第二行的单元格还可以控制本列的对其方式。在一串-左侧加:可以左对齐。右侧加右对齐。双侧加居中。 7. 例如(好像没出效果) | left-align | center-align | right-align | | :--- | :---: | ---: | | git status | git status | git status | 8. 还是得使用html标签呀 &lt;table&gt;&lt;tr&gt;&lt;th&gt;Tables&lt;/th&gt;&lt;th&gt;Are&lt;/th&gt;&lt;th&gt;Cool&lt;/th&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;col 1 is&lt;/td&gt;&lt;td&gt;left-aligned&lt;/td&gt;&lt;td&gt;$1600&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;col 2 is&lt;/td&gt;&lt;td&gt;centered&lt;/td&gt;&lt;td&gt;$12&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;col 3 is&lt;/td&gt;&lt;td&gt;right-aligned&lt;/td&gt;&lt;td&gt;$1&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;]]></content>
      <categories>
        <category>学习</category>
      </categories>
      <tags>
        <tag>导航</tag>
        <tag>分享</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[我的博客]]></title>
    <url>%2F2019%2F06%2F01%2F%E6%88%91%E7%9A%84%E5%8D%9A%E5%AE%A2%2F</url>
    <content type="text"><![CDATA[第一次写博客坑坑坑 个人邮箱1374340498@qq.com]]></content>
  </entry>
</search>
